version: '3'
services:

  # sub:
  #   container_name: sub
  #   image: golang:1.21
  #   restart: always
  #   ports:
  #     - "8082:8082"
  #   volumes:
  #     - './:/usr/src/L0'
  #   working_dir: "/usr/src/L0"
  #   # command: 
  #     # - "pwd"
  #     # - "export PATH='/go:$PATH'"
  #     # - "source /go/bin/go1.21"
  #     # - "go run ./cmd/sub.main.go"
  #     # - "go run /usr/src/L0/cmd/sub/main.go"
  #     # - "go mod tidy"
  #   command: "go run /usr/src/L0/cmd/sub/main.go"
  #   networks:
  #     - my-network

  # nginx:
  #   container_name: nginx
  #   hostname: nginx.docker
  #   image: nginx:latest
  #   restart: always
  #   ports:
  #     - 81:80
  #     - 443:443
  #     # - 8082:8082
  #   volumes:
  #     - './cmd/front:/var/www/html'
  #     - './docker/nginx/conf.d:/etc/nginx/conf.d'
  #   networks:
  #     - my-network
  #   links:
  #     - sub

  postgres:
    container_name: db
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - './internal/storage/db_dump:/db_dump'
      - DATABASE_L0:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  stan:
    container_name: stan
    image: nats-streaming:latest
    restart: always
    ports:
      - "8223:8223"
      - "4223:4223"
      - "4222:4222"
    environment:
      - STAN_CLUSTER_ID=L0_cluster
    command: ["--cluster_id=L0_cluster"]

volumes:
  DATABASE_L0:
 
# networks:
#   my-network:
#     driver: bridge
